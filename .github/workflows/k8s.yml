name: k8s.yml
on:
  push:
    branches: [cicd]
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Build jar with Gradle (uses build cache)
        uses: gradle/actions/setup-gradle@v4
      - name: Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/back:${{ github.run_number }}

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: run ssh
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_IP }}
          username: test
          password: qwer1234
          port: 224
          script: |
            CUR_COLOR=$(kubectl get service k8s-svc -n cms -o jsonpath='{.spec.selector.ver}' 2>/dev/null || echo "")
            if [ "$CUR_COLOR" = "blue" ]; then
              ACTIVE=blue
              NEXT=green
            else
              ACTIVE=green
              NEXT=blue
            fi

            echo "Active: $ACTIVE, Next: $NEXT"

            kubectl -n cms set image deployment/spring-deployment-$NEXT container=${{ secrets.DOCKERHUB_USERNAME }}/back:${{ github.run_number }}
            
            if [ -n "$NEXT" ]; then
              kubectl -n cms scale deployment/spring-deployment-$NEXT --replicas=1
              echo "Scaled up spring-deployment-$NEXT"
            fi

            # 롤아웃 대기
            kubectl -n cms rollout status deployment/spring-deployment-$NEXT
            
            # 서비스 트래픽 전환
            kubectl -n cms patch service k8s-svc \
              -p "{\"spec\":{\"selector\":{\"type\":\"app\",\"ver\":\"$NEXT\"}}}"

            echo "Switched service to $NEXT"
            
            # 이전 Deployment 스케일 다운
            if [ -n "$ACTIVE" ]; then
              kubectl -n cms scale deployment/spring-deployment-$ACTIVE --replicas=0
              echo "Scaled down spring-deployment-$ACTIVE"
            fi
